#cloud-config

# Install packages needed for Cockpit + KVM
# Add user "adminuser" and copy SSH key's from root for SSH user and lock down some root access
# Turn up firewall
# Use NFT as ssh brute force protection (fail2ban lite)
# Setup PAM faillock to protect cockpit UI and SOS console
# Enable automatic DNF updates

package_upgrade: true
package_reboot_if_required: true

datasource:
  Ec2:
    apply_full_imds_network_config: false

packages:
  - iperf3
  - tmux
  - firewalld
  - jq
  - vim
  - nc
  - git
  - dnf-automatic
  - dnf-plugins-core
  - unzip
  - virt-manager
  - libvirt-client
  - virt-install
  - libvirt
  - qemu-kvm
  - qemu-img
  - libguestfs
  - net-tools
  - wget
  - cockpit
  - cockpit-machines
  - cockpit-storaged
  - cockpit-podman
  - cockpit-system
  - cockpit-bridge
  - cockpit-pcp
  - cockpit-packagekit

groups:
 - cloud-users

users:
  - name: adminuser
    primary_group: cloud-users
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [cloud-users, sudo]
    shell: /bin/bash

bootcmd:
  - systemctl stop kdump || true
  - systemctl disable kdump || true

runcmd:
  - [ systemctl, enable, --now, firewalld ]
  - [ firewall-cmd, --permanent, --zone=public, --set-target=DROP ]
  - [ firewall-cmd, --permanent, --zone=public, --add-service=ssh ]
  - [ firewall-cmd, --permanent, --zone=public, --add-service=cockpit ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=10.0.0.0/8 ]
  - [ firewall-cmd, --reload ]
  - [ nft, add, table, ip, SSHWATCH ]
  - [ nft, 'add chain ip SSHWATCH input { type filter hook input priority 0 ; }']
  - [ nft, 'add set ip SSHWATCH denylist { type ipv4_addr ; flags dynamic, timeout ; timeout 5m ; }']
  - [ nft, 'add rule ip SSHWATCH input tcp dport 22 ip protocol tcp ct state new, untracked limit rate over 5/minute add @denylist { ip saddr } log prefix "CLOUD-INIT MANAGED NFT dropping:"']
  - [ nft, 'add rule ip SSHWATCH input ip saddr @denylist drop']
  - [ authselect, select, minimal, with-faillock, --force ]
  - [ modprobe, 8021q ]
  - [ rsync, -av, "/root/.ssh", /home/adminuser/ ]
  - [ chown, -R, "adminuser:cloud-users", "/home/adminuser/.ssh" ]
  - [ sed, -i, -e, '/^#PermitRootLogin/s/^.*$/PermitRootLogin no/', /etc/ssh/sshd_config ]
  - [ sed, -i, -e, '/^#MaxAuthTries/s/^.*$/MaxAuthTries 5/', /etc/ssh/sshd_config ]
  - [ sed, -i, -e, '/^X11Forwarding/s/^.*$/X11Forwarding no/', /etc/ssh/sshd_config ]
  - [ systemctl, restart, sshd ]
  - [ sed, -i, -e, '/^apply_updates/s/^.*$/apply_updates = yes/', /etc/dnf/automatic.conf ]
  - [ systemctl, enable, --now, dnf-automatic.timer ]
  - [ systemctl, enable, --now, podman ]
  - [ systemctl, enable, --now, cockpit ]
  - [ systemctl, enable, --now, libvirtd ]


write_files:
  - path: "/etc/modules-load.d/networking.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      8021q
    permissions: "0644"

  - path: "/etc/dnf/dnf.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      max_parallel_downloads=10
      fastestmirror=True
    permissions: "0644"

  - path: "/etc/security/faillock.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      deny=4
      unlock_time=300
      audit
      even_deny_root
      root_unlock_time=60
    permissions: "0644"

  - path: /etc/crontab
    owner: root:root
    append: true
    content: |
      05 11 * * * root systemctl restart sshd
      10 11 * * * root systemctl restart cockpit.service
      15 11 * * * root systemctl restart serial-getty@ttyS1.service
      20 11 * * * root systemctl restart getty@tty1.service
    permissions: '0644'
