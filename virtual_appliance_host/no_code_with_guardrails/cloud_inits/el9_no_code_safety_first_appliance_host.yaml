#cloud-config

package_upgrade: true
package_reboot_if_required: true

datasource:
  Ec2:
    apply_full_imds_network_config: false
    strict_id: false

packages:
  - iperf3
  - tmux
  - firewalld
  - jq
  - vim
  - nc
  - git
  - nfs-utils
  - dnf-automatic
  - dnf-plugins-core
  - unzip
  - virt-manager
  - libvirt-client
  - virt-install
  - libvirt
  - qemu-kvm
  - qemu-img
  - libguestfs
  - net-tools
  - wget
  - nginx
  - bind-utils
  - cockpit
  - cockpit-machines
  - cockpit-storaged
  - cockpit-podman
  - cockpit-system
  - cockpit-bridge
  - cockpit-pcp
  - cockpit-packagekit

groups:
 - cloud-users

users:
  - name: adminuser
    primary_group: cloud-users
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [cloud-users, sudo]
    shell: /bin/bash

bootcmd:
  - systemctl stop kdump || true
  - systemctl disable kdump || true

runcmd:
  - [ systemctl, enable, --now, firewalld ]
  - [ firewall-cmd, --permanent, --zone=public, --set-target=DROP ]
  - [ firewall-cmd, --permanent, --zone=public, --add-service=ssh ]
  - [ firewall-cmd, --permanent, --zone=public, --add-service=http ]
  - [ firewall-cmd, --permanent, --zone=public, --add-port=81/tcp ]
  - [ firewall-cmd, --permanent, --zone=public, --add-port=82/tcp ]
  - [ firewall-cmd, --permanent, --zone=public, --add-service=cockpit ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=10.0.0.0/8 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=172.16.100.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=192.168.101.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=172.16.253.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=192.168.252.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=172.16.251.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=192.168.250.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=172.16.249.0/24 ]
  - [ firewall-cmd, --permanent, --zone=trusted, --add-source=192.168.248.0/24 ]
  - [ firewall-cmd, --reload ]
  - [ nft, add, table, ip, SSHWATCH ]
  - [ nft, 'add chain ip SSHWATCH input { type filter hook input priority 0 ; }']
  - [ nft, 'add set ip SSHWATCH denylist { type ipv4_addr ; flags dynamic, timeout ; timeout 5m ; }']
  - [ nft, 'add rule ip SSHWATCH input tcp dport 22 ip protocol tcp ct state new, untracked limit rate over 10/minute add @denylist { ip saddr } log prefix "CLOUD-INIT MANAGED NFT dropping:"']
  - [ nft, 'add rule ip SSHWATCH input ip saddr @denylist drop']
  - [ authselect, select, minimal, with-faillock, --force ]
  - [ modprobe, 8021q ]
  - [ rsync, -av, "/root/.ssh", /home/adminuser/ ]
  - [ chown, -R, "adminuser:cloud-users", "/home/adminuser/.ssh" ]
  - [ sed, -i, -e, '/^#PermitRootLogin/s/^.*$/PermitRootLogin no/', /etc/ssh/sshd_config ]
  - [ sed, -i, -e, '/^#MaxAuthTries/s/^.*$/MaxAuthTries 5/', /etc/ssh/sshd_config ]
  - [ sed, -i, -e, '/^X11Forwarding/s/^.*$/X11Forwarding no/', /etc/ssh/sshd_config ]
  - [ systemctl, restart, sshd ]
  - [ sed, -i, -e, '/^apply_updates/s/^.*$/apply_updates = yes/', /etc/dnf/automatic.conf ]
# https://access.redhat.com/solutions/7006710
  - [ setcap, cap_setuid+ep, /usr/bin/newuidmap ]
  - [ setcap, cap_setuid+ep, /usr/bin/newgidmap ]
  - [ bash, /var/tmp/metal_adminuser_mangle.sh ]
  - [ bash, /var/tmp/metal_network_mangle.sh ]
  - [ bash, /var/tmp/metal_disk_mangle.sh ]
  - [ systemctl, daemon-reload ]
  - [ systemctl, enable, --now, dnf-automatic.timer ]
  - [ systemctl, enable, --now, podman ]
  - [ systemctl, enable, --now, cockpit ]
  - [ systemctl, enable, --now, libvirtd ]
  - [ systemctl, enable, --now, nfs-server ]
  - [ systemctl, enable, --now, ncb_podman_setcap_fix ]
  - [ bash, /var/tmp/metal_libvirt_mangle.sh ]
  - [ bash, /var/tmp/metal_nginx_mangle.sh ]

write_files:
  - path: "/etc/modules-load.d/networking.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      8021q

  - path: "/etc/dnf/dnf.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      max_parallel_downloads=10
      fastestmirror=True

  - path: "/etc/exports"
    permissions: "0644"
    owner: "root:root"
    append: false
    content: |
      /mnt/util 10.0.0.0/8(rw,async,no_subtree_check)
      /mnt/util 172.16.100.0/24(rw,async,no_subtree_check)
      /mnt/util 172.16.101.0/24(rw,async,no_subtree_check)
      /mnt/util 172.16.253.0/24(rw,async,no_subtree_check)
      /mnt/util 192.168.252.0/24(rw,async,no_subtree_check)

  - path: "/etc/security/faillock.conf"
    permissions: "0644"
    owner: "root:root"
    append: true
    content: |
      deny=4
      unlock_time=300
      audit
      even_deny_root
      root_unlock_time=60

  - path: /etc/crontab
    owner: root:root
    append: true
    content: |
      05 11 * * * root systemctl restart sshd
      10 11 * * * root systemctl restart cockpit.service
      15 11 * * * root systemctl restart serial-getty@ttyS1.service
      20 11 * * * root systemctl restart getty@tty1.service
    permissions: '0644'

  - path: "/var/tmp/metal_adminuser_mangle.sh"
    owner: root:root
    append: false
    content: |
      logger "running /var/tmp/metal_adminuser_mangle.sh"
      pwhash=$(sudo getent shadow root | cut -d: -f2)
      sudo usermod -p "$pwhash" adminuser
      chmod 0400 /var/tmp/metal_adminuser_mangle.sh
    permissions: '0644'

  - path: "/etc/systemd/system/ncb_podman_setcap_fix.service"
    owner: root:root
    append: false
    content: |
      [Unit]
      Description=ncb_podman_setcap_fix
      After=multi-user.target
      [Service]
      Type=idle
      ExecStart=/bin/bash -c "setcap cap_setuid+ep /usr/bin/newuidmap && setcap cap_setgid+ep /usr/bin/newgidmap"
    permissions: '0655'

  - path: "/var/tmp/metal_nginx_mangle.sh"
    owner: root:root
    append: false
    content: |
      logger "running /var/tmp/metal_nginx_mangle.sh"
      curl -s https://metadata.platformequinix.com/metadata -o /tmp/metadata
      HOST_IP=$(hostname | awk -F "-" '{print$NF}' | sed 's/^0*//')
      PRI_IP=$(jq -r '.network.addresses[] | select((.public==false) and .address_family==4) | .address' /tmp/metadata)
      cp -r /usr/share/nginx/html /usr/share/nginx/private_html
      mkdir /usr/share/nginx/private_html/autoindex
      rm /usr/share/nginx/private_html/index.html
      echo "private network" > /usr/share/nginx/private_html/index.html
      echo "private network" > /usr/share/nginx/private_html/autoindex/index.html
      cat > /etc/nginx/conf.d/metalprivate.conf << EOL
        server {
            listen       $PRI_IP:81;
            listen       localhost:81;
            listen       172.16.100.$HOST_IP:81;
            listen       192.168.101.$HOST_IP:81;
            listen       172.16.253.$HOST_IP:81;
            listen       192.168.252.$HOST_IP:81;
            listen       172.16.251.$HOST_IP:81;
            listen       192.168.250.$HOST_IP:81;
            listen       172.16.249.$HOST_IP:81;
            listen       192.168.248.$HOST_IP:81;
            server_name  _;
            root         /usr/share/nginx/private_html;

            # Load configuration files for the default server block.
            include /etc/nginx/default.d/*.conf;

            error_page 404 /404.html;
            location = /404.html {
            }

            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
            }
            location = /autoindex {
                index index.html;
                autoindex on;
            }
        }
      EOL
      systemctl enable --now nginx
      systemctl restart nginx
      chmod 0400 /var/tmp/metal_nginx_mangle.sh
    permissions: '0644'

  - path: "/var/tmp/metal_libvirt_mangle.sh"
    owner: root:root
    append: false
    content: |
      logger "running /var/tmp/metal_libvirt_mangle.sh"
      curl -s https://metadata.platformequinix.com/metadata -o /tmp/metadata
      HOST_IP=$(hostname | awk -F "-" '{print$NF}' | sed 's/^0*//')
      cat > /var/tmp/metal_libvirt_network_dnsmasq.xml << EOL
        <network xmlns:dnsmasq='http://libvirt.org/schemas/network/dnsmasq/1.0'>
          <name>default</name>
          <uuid>38a47335-4455-4c57-8eab-73e84bc6b409</uuid>
          <forward mode='nat'>
            <nat>
              <port start='1024' end='65535'/>
            </nat>
          </forward>
          <bridge name='virbr0' stp='on' delay='0'/>
          <mac address='52:54:00:7f:45:20'/>
          <ip address='192.168.122.1' netmask='255.255.255.0'>
            <dhcp>
              <range start='192.168.122.2' end='192.168.122.254'/>
            </dhcp>
          </ip>
          <dnsmasq:options>
            <dnsmasq:option value='listen-address=::1,192.168.122.1,172.16.100.$HOST_IP,172.16.101.$HOST_IP'/>
            <dnsmasq:option value='server=147.75.207.207'/>
            <dnsmasq:option value='server=147.75.208.208'/>
            <dnsmasq:option value='synth-domain=libvirt.gtst.local,192.168.122.0/24,host-*'/>
            <dnsmasq:option value='synth-domain=mgmta.gtst.local,172.16.100.0/24,host-*'/>
            <dnsmasq:option value='synth-domain=mgmtb.gtst.local,172.16.101.0/24,host-*'/>
          </dnsmasq:options>
        </network>
      EOL
      virsh net-destroy default
      virsh net-undefine default
      sleep 1
      sync
      virsh net-define /var/tmp/metal_libvirt_network_dnsmasq.xml
      virsh net-start --network default
      mkdir -p /mnt/util/vms
      virsh pool-destroy default
      virsh pool-undefine default
      cat > /var/tmp/metal_storage_pool.xml << EOL
        <pool type="dir">
            <name>default</name>
            <target>
                  <path>/mnt/util/vms</path>
            </target>
        </pool>
      EOL
      virsh pool-define /var/tmp/metal_storage_pool.xml
      virsh pool-autostart default
      virsh pool-start default
      chmod 0400 /var/tmp/metal_libvirt_mangle.sh
    permissions: '0644'

  - path: "/var/tmp/metal_disk_mangle.sh"
    owner: root:root
    append: false
    content: |
      logger "running /var/tmp/metal_disk_mangle.sh"
      mkdir /mnt/util
      DRIVE=$(lsblk --bytes -o name,rota,type,size |  grep -v "zram" | grep -v " 1 " | grep disk | awk '{print$4,$1}' | sort -r -n  | head -1 | awk '{print$2}')
      sgdisk --zap-all /dev/$DRIVE
      mkfs.xfs -f /dev/$DRIVE
      sync
      sleep 2
      sync
      DRIVE_UUID=$(ls -al /dev/disk/by-uuid/ | grep $DRIVE | awk '{print$9}')
      cat > /etc/systemd/system/mnt-util.mount << EOL
      [Unit]
      Description=metal-mount-util-drive (/mnt/util)
      DefaultDependencies=no
      Conflicts=umount.target
      Before=local-fs.target umount.target nfs-server
      After=swap.target
      [Mount]
      What=/dev/disk/by-uuid/$DRIVE_UUID
      Where=/mnt/util
      Type=xfs
      Options=defaults
      [Install]
      WantedBy=multi-user.target

      EOL

      systemctl daemon-reload
      systemctl start mnt-util.mount
      chmod 0400 /var/tmp/metal_disk_mangle.sh
    permissions: '0644'

  - path: "/var/tmp/metal_network_mangle.sh"
    owner: root:root
    append: false
    content: |
        logger "running /var/tmp/metal_network_mangle.sh"
        curl -s https://metadata.platformequinix.com/metadata -o /tmp/metadata

        NUM_INTERFACES=$(ip link list up | grep SLAVE | grep BROADCAST | wc -l)

        if [[ "$NUM_INTERFACES" == 4 ]]; then
            FIRST_INTERFACE=$(ip link list up | grep SLAVE | grep BROADCAST | grep -v "enp0s20f0u9" | awk 'NR==1' | awk '{print$2}' | tr -d "\:")
            SECOND_INTERFACE=$(ip link list up | grep SLAVE | grep BROADCAST | grep -v "enp0s20f0u9" | awk 'NR==3' | awk '{print$2}' | tr -d "\:")
        else
            FIRST_INTERFACE=$(ip link list up | grep SLAVE | grep BROADCAST | grep -v "enp0s20f0u9" | awk 'NR==1' | awk '{print$2}' | tr -d "\:")
            SECOND_INTERFACE=$(ip link list up | grep SLAVE | grep BROADCAST | grep -v "enp0s20f0u9" | awk 'NR==2' | awk '{print$2}' | tr -d "\:")
        fi

        nmcli connection delete bond0
        nmcli connection delete "System $FIRST_INTERFACE"
        nmcli connection delete "System $SECOND_INTERFACE"
        nmcli connection delete "System eth0"
        nmcli connection delete "eth0"
        rm -rf /etc/sysconfig/network-scripts/*

        PUB_IP=$(jq -r '.network.addresses[] | select((.public==true) and .address_family==4) | .address' /tmp/metadata)
        PUB_CIDR=$(jq -r '.network.addresses[] | select((.public==true) and .address_family==4) | "\/"+(.cidr|tostring)' /tmp/metadata)
        PUB_GW=$(jq -r '.network.addresses[] | select((.public==true) and .address_family==4) | .gateway' /tmp/metadata)
        PRI_IP=$(jq -r '.network.addresses[] | select((.public==false) and .address_family==4) | .address' /tmp/metadata)
        PRI_CIDR=$(jq -r '.network.addresses[] | select((.public==false) and .address_family==4) | "\/"+(.cidr|tostring)' /tmp/metadata)
        PRI_GW=$(jq -r '.network.addresses[] | select((.public==false) and .address_family==4) | .gateway' /tmp/metadata)

        HOST_IP=$(hostname | awk -F "-" '{print$NF}' | sed 's/^0*//')

        nmcli connection add type bridge ifname mbr0 con-name mbr0 ipv4.method manual ipv4.never-default true  ipv4.addresses $PUB_IP$PUB_CIDR ipv4.gateway $PUB_GW ipv4.dns '147.75.207.207,147.75.207.208'  ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no

        nmcli connection modify mbr0 +ipv4.addresses $PRI_IP$PRI_CIDR
        nmcli connection modify mbr0 +ipv4.routes "$PRI_GW$PRI_CIDR $PRI_GW"
        nmcli connection modify mbr0 +ipv4.routes "10.0.0.0/8 $PRI_GW"

        nmcli connection add type bond ifname bond0 con-name bond0 bond.options  "mode=802.3ad,miimon=100,lacp_rate=slow,updelay=5000,xmit_hash_policy=layer3+4" ipv4.method disabled  ipv4.never-default true ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000

        nmcli con modify bond0 master mbr0 slave-type bridge
        nmcli connection add type ethernet slave-type bond con-name bond0-port0 ifname $FIRST_INTERFACE master bond0 802-3-ethernet.mtu 9000
        nmcli connection add type ethernet slave-type bond con-name bond0-port1 ifname $SECOND_INTERFACE master bond0 802-3-ethernet.mtu 9000

        nmcli con up bond0
        sleep 2
        nmcli con up mbr0
        sleep 2

        nmcli connection add type bridge ifname mbr0.3880 con-name mbr0.3880 ipv4.method manual ipv4.never-default true ipv4.addresses 172.16.100."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3880
        nmcli con add type vlan con-name bond0.3880 ifname bond0.3880 dev bond0 id 3880
        nmcli con modify bond0.3880 master mbr0.3880 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3880

        nmcli connection add type bridge ifname mbr0.3780 con-name mbr0.3780 ipv4.method manual ipv4.never-default true ipv4.addresses 192.168.101."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3780
        nmcli con add type vlan con-name bond0.3780 ifname bond0.3780 dev bond0 id 3780
        nmcli con modify bond0.3780 master mbr0.3780 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3780

        nmcli connection add type bridge ifname mbr0.3870 con-name mbr0.3870 ipv4.method manual ipv4.never-default true ipv4.addresses 172.16.253."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3870
        nmcli con add type vlan con-name bond0.3870 ifname bond0.3870 dev bond0 id 3870
        nmcli con modify bond0.3870 master mbr0.3870 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3870

        nmcli connection add type bridge ifname mbr0.3770 con-name mbr0.3770 ipv4.method manual ipv4.never-default true ipv4.addresses 192.168.252."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3770
        nmcli con add type vlan con-name bond0.3770 ifname bond0.3770 dev bond0 id 3770
        nmcli con modify bond0.3770 master mbr0.3770 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3770

        nmcli connection add type bridge ifname mbr0.3860 con-name mbr0.3860 ipv4.method manual ipv4.never-default true ipv4.addresses 172.16.251."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3860
        nmcli con add type vlan con-name bond0.3860 ifname bond0.3860 dev bond0 id 3860
        nmcli con modify bond0.3860 master mbr0.3860 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3860

        nmcli connection add type bridge ifname mbr0.3760 con-name mbr0.3760 ipv4.method manual ipv4.never-default true ipv4.addresses 192.168.250."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3760
        nmcli con add type vlan con-name bond0.3760 ifname bond0.3760 dev bond0 id 3760
        nmcli con modify bond0.3760 master mbr0.3760 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3760

        nmcli connection add type bridge ifname mbr0.3850 con-name mbr0.3850 ipv4.method manual ipv4.never-default true ipv4.addresses 172.16.249."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3850
        nmcli con add type vlan con-name bond0.3850 ifname bond0.3850 dev bond0 id 3850
        nmcli con modify bond0.3850 master mbr0.3850 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3850

        nmcli connection add type bridge ifname mbr0.3750 con-name mbr0.3750 ipv4.method manual ipv4.never-default true ipv4.addresses 192.168.248."$HOST_IP"/24 ipv6.method ignore ipv6.never-default true 802-3-ethernet.mtu 9000 bridge.stp no
        nmcli con up mbr0.3750
        nmcli con add type vlan con-name bond0.3750 ifname bond0.3750 dev bond0 id 3750
        nmcli con modify bond0.3750 master mbr0.3750 slave-type bridge 802-3-ethernet.mtu 9000
        nmcli con up bond0.3750

        sed -i "/net.ipv4.ip_forward=1/ s/# *//" /etc/sysctl.conf
        sed -i "/net.ipv6.conf.all.forwarding=1/ s/# *//" /etc/sysctl.conf
        sysctl -p

        if [[ "$HOST_IP" == 1 ]]; then
            nmcli con add type vlan con-name bond0.4 ifname bond0.4 dev bond0 id 4
            nmcli con modify bond0.4 master virbr0 slave-type bridge 802-3-ethernet.mtu 1500
            nmcli con up bond0.4
        fi

        chmod 0400 /var/tmp/metal_network_mangle.sh
    permissions: '0644'
